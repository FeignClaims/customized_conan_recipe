diff --git a/cvmatandqimage.cpp b/cvmatandqimage.cpp
index 1744353..61b60f1 100644
--- a/cvmatandqimage.cpp
+++ b/cvmatandqimage.cpp
@@ -71,7 +71,7 @@ cv::Mat adjustChannelsOrder(const cv::Mat &srcMat, MatColorOrder srcOrder, MatCo
         cv::mixChannels(&srcMat, 1, &desMat, 1, from_to, 4);
     } else {
         //BGRA <==> RBGA
-        cv::cvtColor(srcMat, desMat, CV_BGRA2RGBA);
+        cv::cvtColor(srcMat, desMat, cv::COLOR_BGRA2RGBA);
     }
     return desMat;
 }
@@ -163,22 +163,22 @@ cv::Mat image2Mat(const QImage &img, int requiredMatType, MatColorOrder requried
     switch(targetChannels) {
     case 1:
         if (mat0.channels() == 3) {
-            cv::cvtColor(mat0, mat_adjustCn, CV_RGB2GRAY);
+            cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_RGB2GRAY);
         } else if (mat0.channels() == 4) {
             if (srcOrder == MCO_BGRA)
-                cv::cvtColor(mat0, mat_adjustCn, CV_BGRA2GRAY);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_BGRA2GRAY);
             else if (srcOrder == MCO_RGBA)
-                cv::cvtColor(mat0, mat_adjustCn, CV_RGBA2GRAY);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_RGBA2GRAY);
             else//MCO_ARGB
-                cv::cvtColor(argb2bgra(mat0), mat_adjustCn, CV_BGRA2GRAY);
+                cv::cvtColor(argb2bgra(mat0), mat_adjustCn, cv::COLOR_BGRA2GRAY);
         }
         break;
     case 3:
         if (mat0.channels() == 1) {
-            cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? CV_GRAY2BGR : CV_GRAY2RGB);
+            cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? cv::COLOR_GRAY2BGR : cv::COLOR_GRAY2RGB);
         } else if (mat0.channels() == 3) {
             if (requriedOrder != srcOrder)
-                cv::cvtColor(mat0, mat_adjustCn, CV_RGB2BGR);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_RGB2BGR);
         } else if (mat0.channels() == 4) {
             if (srcOrder == MCO_ARGB) {
                 mat_adjustCn = cv::Mat(mat0.rows, mat0.cols, CV_MAKE_TYPE(mat0.type(), 3));
@@ -186,9 +186,9 @@ cv::Mat image2Mat(const QImage &img, int requiredMatType, MatColorOrder requried
                 int ARGB2BGR[] = {1,2, 2,1, 3,0};
                 cv::mixChannels(&mat0, 1, &mat_adjustCn, 1, requriedOrder == MCO_BGR ? ARGB2BGR : ARGB2RGB, 3);
             } else if (srcOrder == MCO_BGRA) {
-                cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? CV_BGRA2BGR : CV_BGRA2RGB);
+                cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? cv::COLOR_BGRA2BGR : cv::COLOR_BGRA2RGB);
             } else {//RGBA
-                cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? CV_RGBA2BGR : CV_RGBA2RGB);
+                cv::cvtColor(mat0, mat_adjustCn, requriedOrder == MCO_BGR ? cv::COLOR_RGBA2BGR : cv::COLOR_RGBA2RGB);
             }
         }
         break;
@@ -201,9 +201,9 @@ cv::Mat image2Mat(const QImage &img, int requiredMatType, MatColorOrder requried
                 int from_to[] = {0,0, 1,1, 1,2, 1,3};
                 cv::mixChannels(in, 2, &mat_adjustCn, 1, from_to, 4);
             } else if (requriedOrder == MCO_RGBA) {
-                cv::cvtColor(mat0, mat_adjustCn, CV_GRAY2RGBA);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_GRAY2RGBA);
             } else {//MCO_BGRA
-                cv::cvtColor(mat0, mat_adjustCn, CV_GRAY2BGRA);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_GRAY2BGRA);
             }
         } else if (mat0.channels() == 3) {
             if (requriedOrder == MCO_ARGB) {
@@ -213,9 +213,9 @@ cv::Mat image2Mat(const QImage &img, int requiredMatType, MatColorOrder requried
                 int from_to[] = {0,0, 1,1, 2,2, 3,3};
                 cv::mixChannels(in, 2, &mat_adjustCn, 1, from_to, 4);
             } else if (requriedOrder == MCO_RGBA) {
-                cv::cvtColor(mat0, mat_adjustCn, CV_RGB2RGBA);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_RGB2RGBA);
             } else {//MCO_BGRA
-                cv::cvtColor(mat0, mat_adjustCn, CV_RGB2BGRA);
+                cv::cvtColor(mat0, mat_adjustCn, cv::COLOR_RGB2BGRA);
             }
         } else if (mat0.channels() == 4) {
             if (srcOrder != requriedOrder)
@@ -264,11 +264,11 @@ QImage mat2Image(const cv::Mat &mat, MatColorOrder order, QImage::Format formatH
 #if QT_VERSION >= 0x040400
         format = QImage::Format_RGB888;
         if (order == MCO_BGR)
-            cv::cvtColor(mat, mat_adjustCn, CV_BGR2RGB);
+            cv::cvtColor(mat, mat_adjustCn, cv::COLOR_BGR2RGB);
 #else
         format = QImage::Format_RGB32;
         cv::Mat mat_tmp;
-        cv::cvtColor(mat, mat_tmp, order == MCO_BGR ? CV_BGR2BGRA : CV_RGB2BGRA);
+        cv::cvtColor(mat, mat_tmp, order == MCO_BGR ? cv::COLOR_BGR2BGRA : cv::COLOR_RGB2BGRA);
 #if Q_BYTE_ORDER == Q_LITTLE_ENDIAN
         mat_adjustCn = mat_tmp;
 #else
